function ElementFunction:AddToggleColorPicker(ToggleColorPickerConfig)
    ToggleColorPickerConfig = ToggleColorPickerConfig or {}
    ToggleColorPickerConfig.Name = ToggleColorPickerConfig.Name or "Toggle Color Picker"
    ToggleColorPickerConfig.Default = ToggleColorPickerConfig.Default or false
    ToggleColorPickerConfig.ColorPickerDefault = ToggleColorPickerConfig.ColorPickerDefault or Color3.fromRGB(255, 0, 0)
    ToggleColorPickerConfig.Callback = ToggleColorPickerConfig.Callback or function() end
    ToggleColorPickerConfig.Flag = ToggleColorPickerConfig.Flag or nil
    ToggleColorPickerConfig.Save = ToggleColorPickerConfig.Save or false
    ToggleColorPickerConfig.ToolTip = ToggleColorPickerConfig.ToolTip or ""

    local ColorH, ColorS, ColorV = Color3.toHSV(ToggleColorPickerConfig.ColorPickerDefault)
    local ToggleColorPicker = {
        Value = ToggleColorPickerConfig.Default,
        ColorValue = ToggleColorPickerConfig.ColorPickerDefault,
        Type = "ToggleColorPicker",
        Save = ToggleColorPickerConfig.Save
    }
    local RainbowMode = false
    local RainbowConnection = nil

    local SWITCH_WIDTH = 46
    local SWITCH_HEIGHT = 24
    local CIRCLE_SIZE = 18
    local PADDING = 3
    local CHECKBOX_SIZE = 20
    local TOTAL_EXPANDED_HEIGHT = 190

    -- UI Elements

    local ColorSelection = Create("ImageLabel", {
        Size = UDim2.new(0, 18, 0, 18),
        Position = UDim2.new(ColorS, 0, 1 - ColorV, 0),
        ScaleType = Enum.ScaleType.Fit,
        AnchorPoint = Vector2.new(0.5, 0.5),
        BackgroundTransparency = 1,
        Image = "http://www.roblox.com/asset/?id=4805639000"
    })

    local HueSelection = Create("ImageLabel", {
        Size = UDim2.new(0, 18, 0, 18),
        Position = UDim2.new(0.5, 0, 1 - ColorH, 0),
        ScaleType = Enum.ScaleType.Fit,
        AnchorPoint = Vector2.new(0.5, 0.5),
        BackgroundTransparency = 1,
        Image = "http://www.roblox.com/asset/?id=4805639000"
    })

    local Color = Create("ImageLabel", {
        Size = UDim2.new(1, -25, 0, 100),
        Visible = false,
        Image = "rbxassetid://4155801252"
    }, {
        Create("UICorner", {CornerRadius = UDim.new(0, 5)}),
        ColorSelection
    })

    local Hue = Create("Frame", {
        Size = UDim2.new(0, 20, 0, 100),
        Position = UDim2.new(1, -20, 0, 0),
        Visible = false
    }, {
        Create("UIGradient", {
            Rotation = 270,
            Color = ColorSequence.new{
                ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 4)),
                ColorSequenceKeypoint.new(0.20, Color3.fromRGB(234, 255, 0)),
                ColorSequenceKeypoint.new(0.40, Color3.fromRGB(21, 255, 0)),
                ColorSequenceKeypoint.new(0.60, Color3.fromRGB(0, 255, 255)),
                ColorSequenceKeypoint.new(0.80, Color3.fromRGB(0, 17, 255)),
                ColorSequenceKeypoint.new(0.90, Color3.fromRGB(255, 0, 251)),
                ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 4))
            }
        }),
        Create("UICorner", {CornerRadius = UDim.new(0, 5)}),
        HueSelection
    })

    local RainbowCheckbox = Create("Frame", {
        Size = UDim2.new(0, CHECKBOX_SIZE, 0, CHECKBOX_SIZE),
        Position = UDim2.new(1, -54, 0, 160),
        AnchorPoint = Vector2.new(0, 0),
        BackgroundColor3 = Color3.fromRGB(20, 20, 20),
        BorderSizePixel = 0,
        Name = "RainbowCheckbox",
        Visible = false
    })

    local RainbowCheck = Create("ImageLabel", {
        Size = UDim2.new(1, -4, 1, -6),
        Position = UDim2.new(0.5, 0, 0.6, 0),
        AnchorPoint = Vector2.new(0.5, 0.5),
        BackgroundTransparency = 1,
        Image = "rbxassetid://7072716612",
        ImageColor3 = ToggleColorPicker.ColorValue,
        Visible = false,
        Parent = RainbowCheckbox
    })

    local RainbowClick = Create("TextButton", {
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        Text = "",
        Parent = RainbowCheckbox
    })

    Create("UICorner", {
        CornerRadius = UDim.new(0, 4),
        Parent = RainbowCheckbox
    })

    local RainbowStroke = Create("UIStroke", {
        Color = ToggleColorPicker.ColorValue,
        Thickness = 1,
        Transparency = 0.5,
        Parent = RainbowCheckbox
    })

    local RainbowLabel = Create("TextLabel", {
        Size = UDim2.new(0, 100, 0, 20),
        Position = UDim2.new(0, -108, 0.5, 0),
        AnchorPoint = Vector2.new(0, 0.5),
        BackgroundTransparency = 1,
        Text = "Rainbow Mode",
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextXAlignment = Enum.TextXAlignment.Right,
        Font = Enum.Font.Gotham,
        TextSize = 14,
        Parent = RainbowCheckbox
    })

    local ColorpickerContainer = Create("Frame", {
        Position = UDim2.new(0, 0, 0, 32),
        Size = UDim2.new(1, 0, 0, TOTAL_EXPANDED_HEIGHT - 38),
        BackgroundTransparency = 1,
        ClipsDescendants = true,
        Visible = false
    }, {
        Hue,
        Color,
        Create("UIPadding", {
            PaddingLeft = UDim.new(0, 35),
            PaddingRight = UDim.new(0, 35),
            PaddingBottom = UDim.new(0, 15),
            PaddingTop = UDim.new(0, 17)
        })
    })

    local ToggleSwitch = Create("Frame", {
        Size = UDim2.new(0, SWITCH_WIDTH, 0, SWITCH_HEIGHT),
        Position = UDim2.new(1, -SWITCH_WIDTH - 12, 0.5, 0),
        AnchorPoint = Vector2.new(0, 0.5),
        BackgroundColor3 = ToggleColorPicker.Value and Color3.fromRGB(255, 0, 255) or Color3.fromRGB(15, 15, 15),
        BorderSizePixel = 0,
        Name = "Switch"
    })

    local switchClickDetector = Create("TextButton", {
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        Text = "",
        Parent = ToggleSwitch
    })

    Create("UICorner", {
        CornerRadius = UDim.new(1, 0),
        Parent = ToggleSwitch
    })

    local switchStroke = Create("UIStroke", {
        Color = Color3.fromRGB(255, 0, 255),
        Thickness = 1,
        Transparency = ToggleColorPicker.Value and 1 or 0.3,
        Parent = ToggleSwitch
    })

    local ToggleCircle = Create("Frame", {
        Size = UDim2.new(0, CIRCLE_SIZE, 0, CIRCLE_SIZE),
        Position = ToggleColorPicker.Value and UDim2.new(0, SWITCH_WIDTH - CIRCLE_SIZE - PADDING, 0, PADDING) or UDim2.new(0, PADDING, 0, PADDING),
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        BorderSizePixel = 0,
        ZIndex = 2,
        Name = "Circle",
        Parent = ToggleSwitch
    })

    Create("UICorner", {
        CornerRadius = UDim.new(1, 0),
        Parent = ToggleCircle
    })

    local ColorpickerBox = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 4), {
        Size = UDim2.new(0, 24, 0, 24),
        Position = UDim2.new(1, -28, 0.5, 0),
        AnchorPoint = Vector2.new(0.5, 0.5),
        Name = "ColorpickerBox",
        BackgroundColor3 = ToggleColorPicker.ColorValue,
        BorderSizePixel = 0,
        ZIndex = 2
    }), {
        Create("UICorner", {CornerRadius = UDim.new(1, 0)})
    }), Color3.fromRGB(255, 255, 255), 0, 4)

    local ColorpickerButton = Create("TextButton", {
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        Text = "",
        Parent = ColorpickerBox
    })

    local Tooltip = Create("TextLabel", {
        Size = UDim2.new(1, 0, 0, 20),
        Position = UDim2.new(0, 0, 0, -24),
        BackgroundTransparency = 1,
        Text = ToggleColorPickerConfig.ToolTip,
        TextColor3 = Color3.fromRGB(200, 200, 200),
        Font = Enum.Font.Gotham,
        TextSize = 12,
        Visible = ToggleColorPickerConfig.ToolTip ~= "",
        Parent = ColorpickerBox
    })

    ColorpickerBox.Parent = self.Container
    ToggleSwitch.Parent = self.Container
    RainbowCheckbox.Parent = self.Container

    local function SetColorFromHSV(h, s, v)
        ColorH, ColorS, ColorV = h, s, v
        local newColor = Color3.fromHSV(h, s, v)
        ColorpickerBox.BackgroundColor3 = newColor
        RainbowCheck.ImageColor3 = newColor
        HueSelection.Position = UDim2.new(0.5, 0, 1 - h, 0)
        ColorSelection.Position = UDim2.new(s, 0, 1 - v, 0)
        ToggleColorPicker.ColorValue = newColor
        if ToggleColorPicker.Value and not RainbowMode then
            ToggleColorPickerConfig.Callback(newColor)
        end
    end

    local function StartRainbow()
        if RainbowConnection then
            RainbowConnection:Disconnect()
            RainbowConnection = nil
        end
        RainbowConnection = game:GetService("RunService").RenderStepped:Connect(function()
            local hue = (tick() * 0.25) % 1
            SetColorFromHSV(hue, 1, 1)
        end)
    end

    local function StopRainbow()
        if RainbowConnection then
            RainbowConnection:Disconnect()
            RainbowConnection = nil
        end
    end

    switchClickDetector.MouseButton1Click:Connect(function()
        ToggleColorPicker.Value = not ToggleColorPicker.Value
        ToggleSwitch.BackgroundColor3 = ToggleColorPicker.Value and Color3.fromRGB(255, 0, 255) or Color3.fromRGB(15, 15, 15)
        switchStroke.Transparency = ToggleColorPicker.Value and 1 or 0.3
        ToggleCircle.Position = ToggleColorPicker.Value and UDim2.new(0, SWITCH_WIDTH - CIRCLE_SIZE - PADDING, 0, PADDING) or UDim2.new(0, PADDING, 0, PADDING)
        ColorpickerContainer.Visible = ToggleColorPicker.Value
        RainbowCheckbox.Visible = ToggleColorPicker.Value
        if ToggleColorPicker.Value and not RainbowMode then
            ToggleColorPickerConfig.Callback(ToggleColorPicker.ColorValue)
        end
    end)

    ColorpickerButton.MouseButton1Click:Connect(function()
        if ToggleColorPicker.Value then
            ColorpickerContainer.Visible = not ColorpickerContainer.Visible
        end
    end)

    RainbowClick.MouseButton1Click:Connect(function()
        if ToggleColorPicker.Value then
            RainbowMode = not RainbowMode
            RainbowCheck.Visible = RainbowMode
            if RainbowMode then
                StartRainbow()
            else
                StopRainbow()
                -- Reset to current color when rainbow mode ends
                ToggleColorPickerConfig.Callback(ToggleColorPicker.ColorValue)
            end
        end
    end)

    SetColorFromHSV(ColorH, ColorS, ColorV)

    return ToggleColorPicker
end
