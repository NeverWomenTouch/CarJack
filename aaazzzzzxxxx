local cloneref = cloneref or function(x) return x end
local library = {
    RainbowColorValue = 0,
    HueSelectionPosition = 0, 
    SafeCall = false, 
    Conn = {},
    Folder = "Dendrite.cc",
    animatetext = false,
    debug = false,
    OCbtn = false
}
local uis = cloneref( game:GetService("UserInputService"))
local tweensv = cloneref(game:GetService("TweenService"))
local rs = cloneref(game:GetService("RunService"))
local plrs = cloneref(game:GetService("Players"))
local lp = plrs.LocalPlayer
local ms = lp:GetMouse()
local ws = cloneref(game:GetService("Workspace"))
local cam = ws.CurrentCamera
local cg = game:GetService("CoreGui")
local httpsv = cloneref(game:GetService("HttpService"))
local PresetColor, Drawing, placeid = Color3.fromRGB(255, 0, 0), Drawing or {}, game.PlaceId
local CloseBind, getgenv = Enum.KeyCode.X, getgenv or {}
local rbxgui = cg:FindFirstChild("RobloxGui") or Instance.new("ScreenGui", cg)
local paths = {cg:FindFirstChild("AdsEuDsaPromptHandler"), cg, rbxgui}
local currentPathIndex = 1
local altloaded = false
if altloaded then
    for _, path in ipairs(paths) do
        if path then
            for i, v in next, path:GetChildren() do
                if v.Name == "x" then
                    task.wait(0.25)
                    v:Destroy()
                end
            end
        end
    end
    for i, v in next, library.Conn do
        v:Disconnect()
    end
    altloaded = false
end
altloaded = true
local screengui = Instance.new("ScreenGui")
screengui.Name = "x"
screengui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
screengui.Parent = paths[currentPathIndex]
spawn(function()
    while altloaded do
        task.wait(0.1)
        currentPathIndex = currentPathIndex % #paths + 1
        screengui.Parent = paths[currentPathIndex]
    end
end)
task.spawn(function()
	while altloaded do
		library.RainbowColorValue = library.RainbowColorValue + 1 / 255
		library.HueSelectionPosition = library.HueSelectionPosition + 1

		if library.RainbowColorValue >= 1 then
			library.RainbowColorValue = 0
		end

		if library.HueSelectionPosition == 80 then
			library.HueSelectionPosition = 0
		end
		task.wait()
	end
end)

local function animateText(display, text, repeatCount, delay)
    if not display then return end
    local animatedRandom = "1234567890"
    for i = 1, #text do
        local revealChar = text:sub(i, i)
        local displayText = text:sub(1, i - 1)

        for _ = 1, math.random(1, 6) do
            local random = math.random(1, #animatedRandom)
            local randomChar = animatedRandom:sub(random, random)
            display.Text = displayText .. randomChar
            task.wait(delay)
            if library.animatetext then
                break
            end
        end
        display.Text = displayText .. revealChar
        task.wait(delay)
        if library.animatetext then
            break
        end
    end
    task.wait(5)
end

function library:Unload()
    if screengui then
        screengui:Destroy()
    end
    for i,v in next, library.Conn do
		v:Disconnect()
	end
    altloaded = false
end

function MakeDraggable(topbarobject, object)
    local Dragging = nil
    local DragInput = nil
    local DragStart = nil
    local StartPosition = nil

    local function Update(input)
        local Delta = input.Position - DragStart
        local pos =
            UDim2.new(
            StartPosition.X.Scale,
            StartPosition.X.Offset + Delta.X,
            StartPosition.Y.Scale,
            StartPosition.Y.Offset + Delta.Y
        )
        object.Position = pos
    end

    library.Conn[#library.Conn + 1] = topbarobject.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            Dragging = true
            DragStart = input.Position
            StartPosition = object.Position

            library.Conn[#library.Conn + 1] = input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    Dragging = false
                end
            end)
        end
    end)

    library.Conn[#library.Conn + 1] = topbarobject.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            DragInput = input
        end
    end)

    library.Conn[#library.Conn + 1] = uis.InputChanged:Connect(function(input)
        if input == DragInput and Dragging then
            Update(input)
        end
    end)
end

function library:ChangeBind(key)
	CloseBind = key
end

function library:Window(title, version, info, preset, closebind)
    CloseBind = closebind or Enum.KeyCode.Z
    PresetColor = preset or Color3.fromRGB(255, 0, 0)
    fs = false
    local Main = Instance.new("Frame")
    local TabHold = Instance.new("Frame")

    local TabHoldLayout = Instance.new("UIListLayout")
    local Title = Instance.new("TextLabel")
    local TabFolder = Instance.new("Folder")
    local DragFrame = Instance.new("Frame")
	local close = Instance.new("ImageButton")

    local line = Instance.new("Frame", Main)
    line.Name = "Line"
    line.Position = UDim2.new(0.28, 0, 0.1, 5)
    line.Size = UDim2.new(0, 1, 0, 270)
    line.BackgroundColor3 = PresetColor
    line.BorderColor3 = PresetColor
    line.BorderSizePixel = 0

    local line2 = Instance.new("Frame", Main)
    line2.Name = "Line"
    line2.Position = UDim2.new(0.6, 18, -0.5, 1)
    line2.Size = UDim2.new(0, 1, 1, 74)
    line2.Rotation = 810
    line2.BorderSizePixel = 0
    line2.BorderColor3 = PresetColor
    line2.BackgroundColor3 = PresetColor

    local line3 = Instance.new("Frame", Main)
    line3.Name = "Line"
    line3.Position = UDim2.new(0.6, 18, -0.5, 270)
    line3.Size = UDim2.new(0, 1, 1, 75)
    line3.Rotation = 810
    line3.BorderSizePixel = 0
    line3.BorderColor3 = PresetColor
    line3.BackgroundColor3 = PresetColor

    local line4 = Instance.new("Frame", Main)
    line4.Name = "Line"
    line4.Position = UDim2.new(1, -10, 0.1, 5)
    line4.Size = UDim2.new(0, 1, 0, 270)
    line4.BorderSizePixel = 0
    line4.BorderColor3 = PresetColor
    line4.BackgroundColor3 = PresetColor

    Main.Name = "Main"
    Main.Parent = screengui
    Main.AnchorPoint = Vector2.new(0.5, 0.5)
    Main.BackgroundColor3 = Color3.fromRGB(1, 1, 1)
    Main.BorderSizePixel = 0
    Main.Position = UDim2.new(0.5, 0, 0.5, 0)
    Main.Size = UDim2.new(0, 560, 0, 319)
    Main.ClipsDescendants = false
    Main.Visible = true

    local boframe = Instance.new("Frame", Main)
    boframe.Name = "BorderFrame"
    boframe.AnchorPoint = Vector2.new(0.5, 0.5)
    boframe.Position = UDim2.new(0.5, 0, 0.5, 0)
    boframe.Size = UDim2.new(1, 20, 1, 20)
    boframe.BackgroundTransparency = 1
    boframe.ZIndex = 0
    boframe.ClipsDescendants = false

    local img1 = Instance.new("ImageLabel", boframe)
    img1.Name = "TopShadow"
    img1.Image = "rbxassetid://5587865193"
    img1.ImageColor3 = Color3.fromRGB(0, 0, 0)
    img1.AnchorPoint = Vector2.new(0.5, 0.5)
    img1.Position = UDim2.new(0.5, 0, 0.5, 0)
    img1.Size = UDim2.new(1.6, 0, 1.4, 0)
    img1.BackgroundTransparency = 1
    img1.ZIndex = 7

    local img2 = Instance.new("ImageLabel", boframe)
    img2.Name = "BottomShadow"
    img2.Image = "rbxassetid://5587865193"
    img2.ImageColor3 = Color3.fromRGB(0, 0, 0)
    img2.AnchorPoint = Vector2.new(0.5, 0.5)
    img2.Position = UDim2.new(0.5, 0, 0.5, 0)
    img2.Size = UDim2.new(1.6, 0, 1.4, 0)
    img2.BackgroundTransparency = 1
    img2.ZIndex = 7

    local FadeBackgroundFrame = Instance.new("Frame")

	FadeBackgroundFrame.Name = "FadeBackgroundFrame"
	FadeBackgroundFrame.Parent = Main
	FadeBackgroundFrame.BackgroundColor3 = Color3.fromRGB(27,27, 27)
	FadeBackgroundFrame.BackgroundTransparency = 1.000
	FadeBackgroundFrame.BorderSizePixel = 0
	FadeBackgroundFrame.Size = UDim2.new(1, 0, 1, 0)
	FadeBackgroundFrame.ZIndex = 3

	close.Name = "close"
    close.Parent = Main
    close.BackgroundTransparency = 1.000
    close.Position = UDim2.new(0.94, 0, 0.01, 8)
    close.Size = UDim2.new(0, 21, 0, 21)
    close.ZIndex = 2
    close.Image = "rbxassetid://3926305904"
    close.ImageRectOffset = Vector2.new(284, 4)
    close.ImageRectSize = Vector2.new(24, 24)
    close.MouseButton1Click:Connect(function()
        Main.Visible = false
    end)

    TabHold.Name = "TabHold"
    TabHold.Parent = Main
    TabHold.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TabHold.BackgroundTransparency = 1.000
    TabHold.Position = UDim2.new(0.0339285731, 0, 0.147335425, 0)
    TabHold.Size = UDim2.new(0, 107, 0, 254)

    TabHoldLayout.Name = "TabHoldLayout"
    TabHoldLayout.Parent = TabHold
    TabHoldLayout.SortOrder = Enum.SortOrder.LayoutOrder
    TabHoldLayout.Padding = UDim.new(0, 11)

    Title.Name = "Title"
    Title.Parent = Main
    Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Title.BackgroundTransparency = 1.000
    Title.Position = UDim2.new(0.0339285731, 0, 0.0274263314, 0)
    Title.Size = UDim2.new(0, 200, 0, 23)
    Title.Font = Enum.Font.GothamBlack
    Title.Text = title or "Unknown Title"

    local textDisplays = {
        title,
        version,
        info
    }

    coroutine.wrap(function()
        while altloaded do
            local repeatCount = 10
            local delay = 0.05
            for _, v in ipairs(textDisplays) do
                animateText(Title, v, repeatCount, delay)
            end
            if library.animatetext then
                Title.Text = title .. " " .. version
                break
            end
            task.wait(5)
        end
    end)()

    task.spawn(function()
        while altloaded do
            Title.TextColor3 = PresetColor
            line.BackgroundColor3 = PresetColor
            line2.BackgroundColor3 = PresetColor
            line3.BackgroundColor3 = PresetColor
            line4.BackgroundColor3 = PresetColor
            task.wait()
        end
    end)

    Title.TextSize = 20
    Title.TextXAlignment = Enum.TextXAlignment.Left

    DragFrame.Name = "DragFrame"
    DragFrame.Parent = Main
    DragFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    DragFrame.BackgroundTransparency = 1.000
    DragFrame.Size = UDim2.new(0, 560, 0, 41)

    MakeDraggable(DragFrame, Main)

    library.Conn[#library.Conn + 1] = uis.InputBegan:Connect(function(io, p)
        if io.KeyCode == CloseBind then
            if Main.Visible then
                Main.Visible = false
			elseif Main.Visible == false then
                Main.Visible = true
            end
        end
    end)

	local altname = "Show"
	local ismobile = table.find({Enum.Platform.IOS, Enum.Platform.Android}, uis:GetPlatform())
	if cg:FindFirstChild(altname) then
		cg:FindFirstChild(altname):Destroy()
	end

	if ismobile then
		if not cg:FindFirstChild(altname) then
			local ScreenGui = Instance.new("ScreenGui", cg)
			ScreenGui.Name = altname
			local QuickCapture = Instance.new("TextButton", ScreenGui)
			QuickCapture.Name = "UI"
			QuickCapture.BackgroundColor3 = Color3.fromRGB(85, 0, 255)
			QuickCapture.BackgroundTransparency = 0.14
			QuickCapture.Position = UDim2.new(0.93, 0, 0, 40)
			QuickCapture.Size = UDim2.new(0, 33, 0, 33)
			QuickCapture.Font = Enum.Font.SourceSansBold
			QuickCapture.Text = "O/C"
			QuickCapture.TextColor3 = Color3.fromRGB(255, 0, 0)
			QuickCapture.TextSize = 20.000
			QuickCapture.TextWrapped = true
			QuickCapture.Draggable = library.OCbtn
			
			library.Conn[#library.Conn + 1] = QuickCapture.MouseButton1Click:Connect(function()
				if Main.Visible == false then
					Main.Visible = true
				else
					Main.Visible = false
				end
			end)
		end
	end

    TabFolder.Name = "TabFolder"
    TabFolder.Parent = Main

    function library:ChangePresetColor(toch)
        PresetColor = toch
    end

    function library:Notification(texttitle, textdesc, textbtn)
        local NotificationHold = Instance.new("TextButton")
        local NotificationFrame = Instance.new("Frame")
        local OkayBtn = Instance.new("TextButton")
        local OkayBtnCorner = Instance.new("UICorner")
        local OkayBtnTitle = Instance.new("TextLabel")
        local NotificationTitle = Instance.new("TextLabel")
        local NotificationDesc = Instance.new("TextLabel")

        NotificationHold.Name = "NotificationHold"
        NotificationHold.Parent = Main
        NotificationHold.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        NotificationHold.BackgroundTransparency = 1.000
        NotificationHold.BorderSizePixel = 0
        NotificationHold.Size = UDim2.new(0, 560, 0, 319)
        NotificationHold.AutoButtonColor = false
        NotificationHold.Font = Enum.Font.SourceSans
        NotificationHold.Text = ""
        NotificationHold.TextColor3 = Color3.fromRGB(0, 0, 0)
        NotificationHold.TextSize = 14.000

        wait(0.4)

        NotificationFrame.Name = "NotificationFrame"
        NotificationFrame.Parent = NotificationHold
        NotificationFrame.AnchorPoint = Vector2.new(0.5, 0.5)
        NotificationFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        NotificationFrame.BorderSizePixel = 0
        NotificationFrame.ClipsDescendants = true
        NotificationFrame.Position = UDim2.new(0.5, 0, 0.498432577, 0)
        NotificationFrame.Size = UDim2.new(0, 164, 0, 193)

        OkayBtn.Name = "OkayBtn"
        OkayBtn.Parent = NotificationFrame
        OkayBtn.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
        OkayBtn.Position = UDim2.new(0.0609756112, 0, 0.720207274, 0)
        OkayBtn.Size = UDim2.new(0, 144, 0, 42)
        OkayBtn.AutoButtonColor = false
        OkayBtn.Font = Enum.Font.SourceSans
        OkayBtn.Text = ""
        OkayBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
        OkayBtn.TextSize = 14.000

        OkayBtnCorner.CornerRadius = UDim.new(0, 5)
        OkayBtnCorner.Name = "OkayBtnCorner"
        OkayBtnCorner.Parent = OkayBtn

        OkayBtnTitle.Name = "OkayBtnTitle"
        OkayBtnTitle.Parent = OkayBtn
        OkayBtnTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        OkayBtnTitle.BackgroundTransparency = 1.000
        OkayBtnTitle.Position = UDim2.new(0.0763888881, 0, 0, 0)
        OkayBtnTitle.Size = UDim2.new(0, 181, 0, 42)
        OkayBtnTitle.Font = Enum.Font.Gotham
        OkayBtnTitle.Text = textbtn
        OkayBtnTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
        OkayBtnTitle.TextSize = 14.000
        OkayBtnTitle.TextXAlignment = Enum.TextXAlignment.Left

        NotificationTitle.Name = "NotificationTitle"
        NotificationTitle.Parent = NotificationFrame
        NotificationTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        NotificationTitle.BackgroundTransparency = 1.000
        NotificationTitle.Position = UDim2.new(0.0670731738, 0, 0.0829015523, 0)
        NotificationTitle.Size = UDim2.new(0, 143, 0, 26)
        NotificationTitle.Font = Enum.Font.Gotham
        NotificationTitle.Text = texttitle
        NotificationTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
        NotificationTitle.TextSize = 18.000
        NotificationTitle.TextXAlignment = Enum.TextXAlignment.Left

        NotificationDesc.Name = "NotificationDesc"
        NotificationDesc.Parent = NotificationFrame
        NotificationDesc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        NotificationDesc.BackgroundTransparency = 1.000
        NotificationDesc.Position = UDim2.new(0.0670000017, 0, 0.218999997, 0)
        NotificationDesc.Size = UDim2.new(0, 143, 0, 91)
        NotificationDesc.Font = Enum.Font.Gotham
        NotificationDesc.Text = textdesc
        NotificationDesc.TextColor3 = Color3.fromRGB(255, 255, 255)
        NotificationDesc.TextSize = 15.000
        NotificationDesc.TextWrapped = true
        NotificationDesc.TextXAlignment = Enum.TextXAlignment.Left
        NotificationDesc.TextYAlignment = Enum.TextYAlignment.Top


        library.Conn[#library.Conn + 1] = OkayBtn.MouseButton1Click:Connect(function()
            NotificationFrame.Size = UDim2.new(0, 164, 0, 193)
            wait(.4)
            NotificationHold:Destroy()
        end)
    end
    local tabhold = {}
    function tabhold:Tab(text)
        local TabBtn = Instance.new("TextButton")
        local TabTitle = Instance.new("TextLabel")
        local TabBtnIndicator = Instance.new("Frame")
        local TabBtnIndicatorCorner = Instance.new("UICorner")

        TabBtn.Name = "TabBtn"
        TabBtn.Parent = TabHold
        TabBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TabBtn.BackgroundTransparency = 1.000
        TabBtn.Size = UDim2.new(0, 107, 0, 21)
        TabBtn.Font = Enum.Font.SourceSans
        TabBtn.Text = ""
        TabBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
        TabBtn.TextSize = 14.000

        TabTitle.Name = "TabTitle"
        TabTitle.Parent = TabBtn
        TabTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TabTitle.BackgroundTransparency = 1.000
        TabTitle.Size = UDim2.new(0, 107, 0, 21)
        TabTitle.Font = Enum.Font.Gotham
        TabTitle.Text = text
        TabTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
        TabTitle.TextSize = 14.000
        TabTitle.TextXAlignment = Enum.TextXAlignment.Left

        TabBtnIndicator.Name = "TabBtnIndicator"
        TabBtnIndicator.Parent = TabBtn
        TabBtnIndicator.BackgroundColor3 = PresetColor
        TabBtnIndicator.BorderSizePixel = 0
        TabBtnIndicator.Position = UDim2.new(0, 0, 1, 0)
        TabBtnIndicator.Size = UDim2.new(0, 0, 0, 5)

        TabBtnIndicatorCorner.Name = "TabBtnIndicatorCorner"
        TabBtnIndicatorCorner.Parent = TabBtnIndicator

        coroutine.wrap(function()
            while altloaded do
                TabBtnIndicator.BackgroundColor3 = PresetColor
				task.wait()
            end
        end)()

        local Tab = Instance.new("ScrollingFrame")
        local TabLayout = Instance.new("UIListLayout")

        Tab.Name = "Tab"
        Tab.Parent = TabFolder
        Tab.Active = true
        Tab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Tab.BackgroundTransparency = 1.000
        Tab.BorderSizePixel = 0
        Tab.Position = UDim2.new(0.31400001, 0, 0.147, 0)
        Tab.Size = UDim2.new(0, 373, 0, 254)
        Tab.CanvasSize = UDim2.new(0, 0, 0, 0)
        Tab.ScrollBarThickness = 3
        Tab.Visible = false

        TabLayout.Name = "TabLayout"
        TabLayout.Parent = Tab
        TabLayout.SortOrder = Enum.SortOrder.LayoutOrder
        TabLayout.Padding = UDim.new(0, 6)

        if fs == false then
            fs = true
            TabBtnIndicator.Size = UDim2.new(0, 13, 0, 2)
            TabTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            Tab.Visible = true
        end

        library.Conn[#library.Conn + 1] = TabBtn.MouseButton1Click:Connect(function()
            for i, v in next, TabFolder:GetChildren() do
                if v.Name == "Tab" then
                    v.Visible = false
                end
                Tab.Visible = true
            end
            for i, v in next, TabHold:GetChildren() do
                if v.Name == "TabBtn" then
                    v.TabBtnIndicator.Size = UDim2.new(0, 0, 0, 2)
                    TabBtnIndicator.Size = UDim2.new(0, 13, 0, 2)
                end
            end
        end)
        local tabcontent = {}
        function tabcontent:Button(text, callback)
            local Button = Instance.new("TextButton")
            local ButtonCorner = Instance.new("UICorner")
            local ButtonTitle = Instance.new("TextLabel")
            Button.Name = "Button"
            Button.Parent = Tab
            Button.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
            Button.Size = UDim2.new(0, 363, 0, 42)
            Button.AutoButtonColor = false
            Button.Font = Enum.Font.SourceSans
            Button.Text = ""
            Button.TextColor3 = Color3.fromRGB(0, 0, 0)
            Button.TextSize = 14.000
            ButtonCorner.CornerRadius = UDim.new(0, 5)
            ButtonCorner.Name = "ButtonCorner"
            ButtonCorner.Parent = Button
            ButtonTitle.Name = "ButtonTitle"
            ButtonTitle.Parent = Button
            ButtonTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ButtonTitle.BackgroundTransparency = 1.000
            ButtonTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
            ButtonTitle.Size = UDim2.new(0, 187, 0, 42)
            ButtonTitle.Font = Enum.Font.SourceSans
            ButtonTitle.Text = text
            ButtonTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            ButtonTitle.TextSize = 18
            ButtonTitle.TextXAlignment = Enum.TextXAlignment.Left
            library.Conn[#library.Conn + 1] = Button.MouseButton1Click:Connect(function()
                local suc, res = pcall(callback)
                if library.debug then
                    warn("Callback Error: ", res)
                end
            end)

            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
        end


        function tabcontent:Textbox(text, disapper, callback)
            local Textbox = Instance.new("Frame")
            local TextboxCorner = Instance.new("UICorner")
            local TextboxTitle = Instance.new("TextLabel")
            local TextboxFrame = Instance.new("Frame")
            local TextboxFrameCorner = Instance.new("UICorner")
            local TextBox = Instance.new("TextBox")

            Textbox.Name = "Textbox"
            Textbox.Parent = Tab
            Textbox.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
            Textbox.ClipsDescendants = true
            Textbox.Position = UDim2.new(-0.541071415, 0, -0.532915354, 0)
            Textbox.Size = UDim2.new(0, 363, 0, 42)

            TextboxCorner.CornerRadius = UDim.new(0, 5)
            TextboxCorner.Name = "TextboxCorner"
            TextboxCorner.Parent = Textbox

            TextboxTitle.Name = "TextboxTitle"
            TextboxTitle.Parent = Textbox
            TextboxTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            TextboxTitle.BackgroundTransparency = 1.000
            TextboxTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
            TextboxTitle.Size = UDim2.new(0, 187, 0, 42)
            TextboxTitle.Font = Enum.Font.SourceSans
            TextboxTitle.Text = text
            TextboxTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            TextboxTitle.TextSize = 18
            TextboxTitle.TextXAlignment = Enum.TextXAlignment.Left

            TextboxFrame.Name = "TextboxFrame"
            TextboxFrame.Parent = TextboxTitle
            TextboxFrame.BackgroundColor3 = Color3.fromRGB(37, 37, 37)
            TextboxFrame.Position = UDim2.new(1.28877008, 0, 0.214285716, 0)
            TextboxFrame.Size = UDim2.new(0, 100, 0, 23)

            TextboxFrameCorner.CornerRadius = UDim.new(0, 5)
            TextboxFrameCorner.Name = "TextboxFrameCorner"
            TextboxFrameCorner.Parent = TextboxFrame

            TextBox.Parent = TextboxFrame
            TextBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            TextBox.BackgroundTransparency = 1.000
            TextBox.Size = UDim2.new(0, 100, 0, 23)
            TextBox.Font = Enum.Font.Gotham
            TextBox.Text = ""
            TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
            TextBox.TextSize = 14.000

            library.Conn[#library.Conn + 1] = TextBox.FocusLost:Connect(function(ep)
                if ep then
                    if #TextBox.Text > 0 then
                        pcall(callback, TextBox.Text)
                        if disapper then
                            TextBox.Text = ""
                        end
                    end
                end
            end)
            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
        end

        function tabcontent:Bind(text, keypreset, callback, flag)
            local flag = flag or text
            local binding = false
            local Key = keypreset.Name
            local Bind = Instance.new("TextButton")
            local BindCorner = Instance.new("UICorner")
            local BindTitle = Instance.new("TextLabel")
            local BindText = Instance.new("TextLabel")

            Bind.Name = "Bind"
            Bind.Parent = Tab
            Bind.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
            Bind.Size = UDim2.new(0, 363, 0, 42)
            Bind.AutoButtonColor = false
            Bind.Font = Enum.Font.SourceSans
            Bind.Text = ""
            Bind.TextColor3 = Color3.fromRGB(0, 0, 0)
            Bind.TextSize = 14.000

            BindCorner.CornerRadius = UDim.new(0, 5)
            BindCorner.Name = "BindCorner"
            BindCorner.Parent = Bind

            BindTitle.Name = "BindTitle"
            BindTitle.Parent = Bind
            BindTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            BindTitle.BackgroundTransparency = 1.000
            BindTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
            BindTitle.Size = UDim2.new(0, 187, 0, 42)
            BindTitle.Font = Enum.Font.Gotham
            BindTitle.Text = text
            BindTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            BindTitle.TextSize = 14.000
            BindTitle.TextXAlignment = Enum.TextXAlignment.Left

            BindText.Name = "BindText"
            BindText.Parent = Bind
            BindText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            BindText.BackgroundTransparency = 1.000
            BindText.Position = UDim2.new(0.0358126722, 0, 0, 0)
            BindText.Size = UDim2.new(0, 337, 0, 42)
            BindText.Font = Enum.Font.Gotham
            BindText.Text = Key
            BindText.TextColor3 = Color3.fromRGB(255, 255, 255)
            BindText.TextSize = 14.000
            BindText.TextXAlignment = Enum.TextXAlignment.Right
            local keybind = {
                value = keypreset,
                keyName = Key,
                set = function(self, key)
                    if typeof(key) == "string" then
                        local success, keyEnum = pcall(function()
                            return Enum.KeyCode[key]
                        end)
                        if success and keyEnum then
                            self.value = keyEnum
                            self.keyName = key
                            Key = key
                            BindText.Text = key
                        else
                            warn("Invalid key name:", key)
                        end
                    elseif typeof(key) == "EnumItem" and key.EnumType == Enum.KeyCode then
                        self.value = key
                        self.keyName = key.Name
                        Key = key.Name
                        BindText.Text = key.Name
                    end
                    
                    return self
                end
            }
            if not library.flags then library.flags = {} end
            library.flags[flag] = keybind

            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)

            library.Conn[#library.Conn + 1] = Bind.MouseButton1Click:Connect(function()
                BindText.Text = "..."
                binding = true
                
                local inputwait = uis.InputBegan:wait()
                if inputwait.KeyCode.Name ~= "Unknown" then
                    BindText.Text = inputwait.KeyCode.Name
                    Key = inputwait.KeyCode.Name
                    keybind.value = inputwait.KeyCode
                    keybind.keyName = inputwait.KeyCode.Name
                end
                binding = false
            end)
            library.Conn[#library.Conn + 1] = uis.InputBegan:connect(function(current, pressed)
                if not pressed and not binding then
                    if current.KeyCode.Name == Key then
                        pcall(callback, Key)
                    end
                end
            end)
            library.Conn[#library.Conn + 1] = Bind.MouseEnter:Connect(function()
                tweensv:Create(Bind, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(38, 38, 38)}):Play()
            end)
            library.Conn[#library.Conn + 1] = Bind.MouseLeave:Connect(function()
                tweensv:Create(Bind, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(34, 34, 34)}):Play()
            end)
            
            return keybind
        end
        return tabcontent
    end
    return tabhold
end
----------------------------------------------------------------// CONFIG SYSTEM //----------------------------------------------------------------


return library
